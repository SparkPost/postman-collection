{
	"info": {
		"_postman_id": "ad8a479e-ac44-4ce6-bc6b-4c95d57b64f9",
		"name": "SparkPost API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "A/B Testing [LABS]",
			"description": "https://developers.sparkpost.com/api/ab-testing.html\n\n**Note: **[LABS] features may be changed / deprecated in future\n**Note: **This endpoint is available in SparkPost only\n\nAn A/B test is a method of comparing templates to see which one performs better. You provide a range of templates (2-10), a recipient list (less than 2,000 entries), a sample size, and a test duration to begin. When the test time has expired, the template with the best conversion rate wins. All remaining recipients will be sent the winning template. The A/B Testing API provides the means to create new tests, and view completed results.",
			"item": [
				{
					"name": "Create an A/B Test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration_hours\": 1,\n  \"recipient_list\": \"unique_id_4_graduate_students_list\",\n  \"groups\": [\n    {\n      \"size\": 1,\n      \"template_id\": \"my-first-email\"\n    },\n    {\n      \"size\": 1,\n      \"template_id\": \"my-second-email\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/labs/ab-testing",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"labs",
								"ab-testing"
							]
						}
					},
					"response": []
				},
				{
					"name": "List A/B Tests",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/labs/ab-testing",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"labs",
								"ab-testing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an A/B Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/labs/ab-testing/f23bd590-2ec6-11e8-9a59-6d86f7077de4",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"labs",
								"ab-testing",
								"f23bd590-2ec6-11e8-9a59-6d86f7077de4"
							]
						},
						"description": "Retrieves a specific A/B Test."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "27139bfc-f851-43e2-a355-f732b77efe99",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "77d956fc-0d95-4ced-81fe-e9cbd78c998e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Account Info",
			"description": null,
			"item": [
				{
					"name": "Retrieve Account information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/account",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"account"
							]
						},
						"description": "Get your SparkPost account information, including subscription status and quota usage."
					},
					"response": []
				},
				{
					"name": "Update Account information",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"company_name\": \"Avocado Industries\",\n  \"options\": {\n    \"smtp_tracking_default\": true\n  }\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/account?include=usage",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"account"
							],
							"query": [
								{
									"key": "include",
									"value": "usage"
								}
							]
						},
						"description": "Update your SparkPost account information and account-level options."
					},
					"response": []
				}
			]
		},
		{
			"name": "Inbound Domains",
			"description": "https://developers.sparkpost.com/api/#/reference/inbound-domains",
			"item": [
				{
					"name": "Create an Inbound Domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"inbounddomain.example.com\"\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/inbound-domains",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"inbound-domains"
							]
						},
						"description": "Create an inbound domain by providing an **inbound domains object** as the POST request body.\n\n"
					},
					"response": []
				},
				{
					"name": "List all Inbound Domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/inbound-domains",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"inbound-domains"
							]
						},
						"description": "List all your inbound domains.\n\n"
					},
					"response": []
				},
				{
					"name": "Retrieve an Inbound Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/inbound-domains/inbounddomain.example.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"inbound-domains",
								"inbounddomain.example.com"
							]
						},
						"description": "Retrieve an inbound domain by specifying its domain name in the URI path.\n\n"
					},
					"response": []
				},
				{
					"name": "Delete an Inbound Domain",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/inbound-domains/inbounddomain.example.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"inbound-domains",
								"inbounddomain.example.com"
							]
						},
						"description": "Delete an inbound domain by specifying its domain name in the URI path.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "IP Pools",
			"description": null,
			"item": [
				{
					"name": "List all IP Pools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/ip-pools",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"ip-pools"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an IP Pool",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Warm up IP Pool\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/ip-pools",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"ip-pools"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an IP Pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/ip-pools/warm_up_ip_pool",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"ip-pools",
								"warm_up_ip_pool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an IP Pool",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"Updated Warm up IP Pool\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/ip-pools/warm_up_ip_pool",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"ip-pools",
								"warm_up_ip_pool"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an IP Pool",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/ip-pools/warm_up_ip_pool",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"ip-pools",
								"warm_up_ip_pool"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metrics",
			"description": "https://developers.sparkpost.com/api/#/reference/metrics",
			"item": [
				{
					"name": "Metrics Discoverability Links",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								""
							]
						},
						"description": "Provides links to all child URIs within the Metrics API.\n\n"
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_accepted,count_admin_bounce,count_block_bounce,count_bounce,count_clicked,count_delayed,count_delayed_first,count_delivered,count_delivered_first,count_delivered_subsequent,count_generation_failed,count_generation_rejection,count_hard_bounce,count_inband_bounce,count_initial_rendered,count_injected,count_outofband_bounce,count_policy_rejection,count_rejected,count_rendered,count_sent,count_soft_bounce,count_spam_complaint,count_targeted,count_undetermined_bounce,count_unique_clicked,count_unique_confirmed_opened,count_unique_initial_rendered,count_unique_rendered,total_delivery_time_first,total_delivery_time_subsequent,total_msg_volume&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_accepted,count_admin_bounce,count_block_bounce,count_bounce,count_clicked,count_delayed,count_delayed_first,count_delivered,count_delivered_first,count_delivered_subsequent,count_generation_failed,count_generation_rejection,count_hard_bounce,count_inband_bounce,count_initial_rendered,count_injected,count_outofband_bounce,count_policy_rejection,count_rejected,count_rendered,count_sent,count_soft_bounce,count_spam_complaint,count_targeted,count_undetermined_bounce,count_unique_clicked,count_unique_confirmed_opened,count_unique_initial_rendered,count_unique_rendered,total_delivery_time_first,total_delivery_time_subsequent,total_msg_volume"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides high-level summary of aggregate metrics and lists the child endpoints that contain\naggregate data, which can be used as \"group by\" qualifiers.\n\n"
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics by Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/domain?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_accepted,count_admin_bounce,count_block_bounce,count_bounce,count_clicked,count_delayed,count_delayed_first,count_delivered,count_delivered_first,count_delivered_subsequent,count_generation_failed,count_generation_rejection,count_hard_bounce,count_inband_bounce,count_initial_rendered,count_injected,count_outofband_bounce,count_policy_rejection,count_rejected,count_rendered,count_sent,count_soft_bounce,count_spam_complaint,count_targeted,count_undetermined_bounce,count_unique_clicked,count_unique_confirmed_opened,count_unique_initial_rendered,count_unique_rendered,total_delivery_time_first,total_delivery_time_subsequent,total_msg_volume&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"domain"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_accepted,count_admin_bounce,count_block_bounce,count_bounce,count_clicked,count_delayed,count_delayed_first,count_delivered,count_delivered_first,count_delivered_subsequent,count_generation_failed,count_generation_rejection,count_hard_bounce,count_inband_bounce,count_initial_rendered,count_injected,count_outofband_bounce,count_policy_rejection,count_rejected,count_rendered,count_sent,count_soft_bounce,count_spam_complaint,count_targeted,count_undetermined_bounce,count_unique_clicked,count_unique_confirmed_opened,count_unique_initial_rendered,count_unique_rendered,total_delivery_time_first,total_delivery_time_subsequent,total_msg_volume"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides aggregate metrics grouped by domain over the time window specified.\n\n"
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics by Sending IP",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/sending-ip?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_targeted&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"sending-ip"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_targeted"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides aggregate metrics grouped by sending IP over the time window specified."
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics by IP Pool",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/ip-pool?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_targeted&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"ip-pool"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_targeted"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides aggregate metrics grouped by IP pool over the time window specified."
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics by Sending Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/sending-domain?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_targeted&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"sending-domain"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_targeted"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides aggregate metrics grouped by IP pool over the time window specified."
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics by Subaccount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/subaccount?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_targeted&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"subaccount"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_targeted"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides aggregate metrics grouped by subaccount over the time window specified. Please note that master account events will be returned grouped by the subaccount_id field containing the value 0."
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics by Campaign",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/campaign?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_targeted&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"campaign"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_targeted"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides aggregate metrics grouped by campaign over the time window specified.\n\n"
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics by Template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/template?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_targeted&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"template"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_targeted"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides aggregate metrics grouped by template over the time window specified.\n\n"
					},
					"response": []
				},
				{
					"name": "Deliverability Metrics by Watched Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/watched-domain?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_targeted&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"watched-domain"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_targeted"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides aggregate metrics grouped by watched domain over the time window specified. The difference\nbetween domain and watched domain is that watched domains are comprised of the top 99% domains\nin the world.\n\n"
					},
					"response": []
				},
				{
					"name": "Time-Series Metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/time-series?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&precision=day&metrics=count_targeted&timezone=America/New_York&limit=5&order_by=count_injected",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"time-series"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "precision",
									"value": "day"
								},
								{
									"key": "metrics",
									"value": "count_targeted"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "order_by",
									"value": "count_injected"
								}
							]
						},
						"description": "Provides deliverability metrics ordered by a precision of time.\n\nThe following table describes the validation for the **precision** parameter:\n\n| Value of         | Valid for time window of    |\n|---------------|-------------|\n|1min, 5min |day |\n|hour |month |\n|day, month |_any_ |\n\n"
					},
					"response": []
				},
				{
					"name": "Bounce Reason Metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/bounce-reason?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_bounce,count_inband_bounce,count_outofband_bounce&timezone=America/New_York&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"bounce-reason"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_bounce,count_inband_bounce,count_outofband_bounce"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Provides deliverability metrics, specific to bounce events, grouped by the bounce reasons.\n\n"
					},
					"response": []
				},
				{
					"name": "Bounce Reason Metrics By Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/bounce-reason/domain?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_bounce,count_inband_bounce,count_outofband_bounce&timezone=America/New_York&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"bounce-reason",
								"domain"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_bounce,count_inband_bounce,count_outofband_bounce"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Provides deliverability metrics, specific to bounce events, grouped by the domain and bounce reasons.\n\n"
					},
					"response": []
				},
				{
					"name": "Bounce Classification Metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/bounce-classification?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&metrics=count_bounce,count_inband_bounce,count_outofband_bounce&timezone=America/New_York&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"bounce-classification"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "metrics",
									"value": "count_bounce,count_inband_bounce,count_outofband_bounce"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Provides deliverability metrics, specific to bounce events, grouped by the bounce classification. (See [Bounce Classification Codes.](https://www.sparkpost.com/docs/bounce-classification-codes))\n\n"
					},
					"response": []
				},
				{
					"name": "Rejection Reason Metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/rejection-reason?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&timezone=America/New_York&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"rejection-reason"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Provides deliverability metrics, specific to rejection events, grouped by the rejection reasons.\n\n"
					},
					"response": []
				},
				{
					"name": "Rejection Reason Metrics By Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/rejection-reason/domain?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&timezone=America/New_York&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"rejection-reason",
								"domain"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Provides deliverability metrics, specific to rejection events, grouped by the domain and rejection reasons.\n\n"
					},
					"response": []
				},
				{
					"name": "Delay Reason Metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/delay-reason?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&timezone=America/New_York&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"delay-reason"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Provides deliverability metrics, specific to delay events, grouped by the delay reasons.\n\n"
					},
					"response": []
				},
				{
					"name": "Delay Reason Metrics By Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/delay-reason/domain?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&timezone=America/New_York&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"delay-reason",
								"domain"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Provides deliverability metrics, specific to delay events, grouped by the domain and delay reasons.\n\n"
					},
					"response": []
				},
				{
					"name": "Engagement Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/link-name?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&timezone=America/New_York&metrics=count_clicked,count_raw_clicked&campaigns=Black Friday&templates=summer-sale&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&limit=5",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"link-name"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "metrics",
									"value": "count_clicked,count_raw_clicked"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Provides deliverability metrics, specific to engagement events (clicks/opens), grouped by the link\nname (or URL if no link name exists).\n\nTo name the links in your messages, [read about the `data-msys-link-name` HTML attribute here](https://developers.sparkpost.com/api/substitutions-reference.html#header-link-names)"
					},
					"response": []
				},
				{
					"name": "Deliveries By Attempt",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/deliverability/attempt?from=2018-01-01T00:00&to=2018-12-31T23:59&delimiter=,&domains=gmail.com,yahoo.com,hotmail.com&campaigns=Black Friday&templates=summer-sale&sending_ips=123.456.789.123&ip_pools=Transactional&sending_domains=sales.sender.com,transactional.sender.com&subaccounts=123,125,127&timezone=America/New_York",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"deliverability",
								"attempt"
							],
							"query": [
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "domains",
									"value": "gmail.com,yahoo.com,hotmail.com"
								},
								{
									"key": "campaigns",
									"value": "Black Friday"
								},
								{
									"key": "templates",
									"value": "summer-sale"
								},
								{
									"key": "sending_ips",
									"value": "123.456.789.123"
								},
								{
									"key": "ip_pools",
									"value": "Transactional"
								},
								{
									"key": "sending_domains",
									"value": "sales.sender.com,transactional.sender.com"
								},
								{
									"key": "subaccounts",
									"value": "123,125,127"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								}
							]
						},
						"description": "Provides aggregate count of deliveries grouped by the attempt number.\n\n`bindings` and `binding_groups` are SparkPost Enterprise only, and are deprecated in favor of `sending_ips` and `ip_pools`."
					},
					"response": []
				},
				{
					"name": "IP Pools List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/ip-pools?match=test&limit=5&from=2018-01-01T00:00&to=2018-12-31T23:59&timezone=America/New_York",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"ip-pools"
							],
							"query": [
								{
									"key": "match",
									"value": "test"
								},
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								}
							]
						},
						"description": "Returns a list of IP pools that the Metrics API contains data on."
					},
					"response": []
				},
				{
					"name": "Sending IPs List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/sending-ips?limit=5&from=2018-01-01T00:00&to=2018-12-31T23:59&timezone=America/New_York",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"sending-ips"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								}
							]
						},
						"description": "Returns a list of sending IPs that the Metrics API contains data on."
					},
					"response": []
				},
				{
					"name": "Campaigns List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/campaigns?limit=5&from=2018-01-01T00:00&to=2018-12-31T23:59&timezone=America/New_York",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"campaigns"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								}
							]
						},
						"description": "Returns a list of campaigns that the Metrics API contains data on.\n\n"
					},
					"response": []
				},
				{
					"name": "Domains List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/metrics/domains?limit=5&from=2018-01-01T00:00&to=2018-12-31T23:59&timezone=America/New_York",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								"domains"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								}
							]
						},
						"description": "Returns a list of domains that the Metrics API contains data on.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Message Events",
			"description": "https://developers.sparkpost.com/api/#/reference/message-events",
			"item": [
				{
					"name": "Documentation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/message-events/events/documentation",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"message-events",
								"events",
								"documentation"
							]
						},
						"description": "List descriptions of the event fields that could be included in a response from the Message Events search endpoint. Fields will vary by event type.\n\n"
					},
					"response": []
				},
				{
					"name": "Samples",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/message-events/events/samples?events=bounce",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"message-events",
								"events",
								"samples"
							],
							"query": [
								{
									"key": "events",
									"value": "bounce"
								}
							]
						},
						"description": "List an example of the event data that will be included in a response from the Message Events search endpoint.\n\n"
					},
					"response": []
				},
				{
					"name": "Search for Message Events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/message-events?bounce_classes=1&campaign_ids=Example Campaign Name&delimiter=,&events=delivery,injection,bounce,delay,policy_rejection,out_of_band,open,click,generation_failure,generation_rejection,spam_complaint,list_unsubscribe,link_unsubscribe&friendly_froms=sender@mail.example.com&from=2018-01-01T00:00&message_ids=0e0d94b7-9085-4e3c-ab30-e3f2cd9c273e&page=25&per_page=1000&reason=bounce&recipients=recipient@example.com&template_ids=templ-1234&timezone=America/New_York&to=2018-12-31T23:59&transmission_ids=65832150921904138",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"message-events"
							],
							"query": [
								{
									"key": "bounce_classes",
									"value": "1"
								},
								{
									"key": "campaign_ids",
									"value": "Example Campaign Name"
								},
								{
									"key": "delimiter",
									"value": ","
								},
								{
									"key": "events",
									"value": "delivery,injection,bounce,delay,policy_rejection,out_of_band,open,click,generation_failure,generation_rejection,spam_complaint,list_unsubscribe,link_unsubscribe"
								},
								{
									"key": "friendly_froms",
									"value": "sender@mail.example.com"
								},
								{
									"key": "from",
									"value": "2018-01-01T00:00"
								},
								{
									"key": "message_ids",
									"value": "0e0d94b7-9085-4e3c-ab30-e3f2cd9c273e"
								},
								{
									"key": "page",
									"value": "25"
								},
								{
									"key": "per_page",
									"value": "1000"
								},
								{
									"key": "reason",
									"value": "bounce"
								},
								{
									"key": "recipients",
									"value": "recipient@example.com"
								},
								{
									"key": "template_ids",
									"value": "templ-1234"
								},
								{
									"key": "timezone",
									"value": "America/New_York"
								},
								{
									"key": "to",
									"value": "2018-12-31T23:59"
								},
								{
									"key": "transmission_ids",
									"value": "65832150921904138"
								}
							]
						},
						"description": "Perform a filtered search for message event data. The response is sorted by descending timestamp.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipient Lists",
			"description": "https://developers.sparkpost.com/api/#/reference/recipient-lists",
			"item": [
				{
					"name": "Create a Recipient List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"unique_id_4_graduate_students_list\",\n  \"name\": \"graduate_students\",\n  \"description\": \"An email list of graduate students at UMBC\",\n  \"attributes\": {\n      \"internal_id\": 112,\n      \"list_group_id\": 12321\n  },\n  \"recipients\": [\n      {\n          \"return_path\": \"return-path-wilmaflin@tstone.com\",\n          \"address\": {\n              \"email\": \"wilmaflin@yahoo.com\",\n              \"name\": \"Wilma\"\n          },\n          \"metadata\": {\n              \"place\": \"Bedrock\"\n          },\n          \"substitution_data\": {\n              \"subrcptkey\": \"subrcptvalue\"\n          },\n          \"tags\": [\n              \"greeting\",\n              \"prehistoric\",\n              \"fred\",\n              \"flintstone\"\n          ]\n      },\n      {\n          \"return_path\": \"return-path-abc@tstone.com\",\n          \"address\": {\n              \"email\": \"abc@flintstone.com\",\n              \"name\": \"ABC\"\n          },\n          \"metadata\": {\n              \"place\": \"MD\"\n          },\n          \"tags\": [\n              \"driver\",\n              \"computer science\",\n              \"fred\",\n              \"flintstone\"\n          ]\n      },\n      {\n          \"return_path\": \"return-path-def@tstone.com\",\n           \"address\": {\n              \"email\": \"fred.jones@flintstone.com\",\n              \"name\": \"Grad Student Office\",\n              \"header_to\": \"grad-student-office@flintstone.com\"\n          },\n          \"tags\": [\n              \"driver\",\n              \"computer science\",\n              \"fred\",\n              \"flintstone\"\n          ]\n      }\n  ]\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/recipient-lists?num_rcpt_errors=3",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"recipient-lists"
							],
							"query": [
								{
									"key": "num_rcpt_errors",
									"value": "3"
								}
							]
						},
						"description": "Create a recipient list by providing a **recipient list object** as the POST request body.\n\nAt a minimum, the `recipients` array is required, which must contain a valid `address`.  If the\nrecipient list `id` is not provided in the POST request body, one will be generated and returned\nin the results body.  Use the **num_rcpt_errors** parameter to limit the number of recipient errors\nreturned."
					},
					"response": []
				},
				{
					"name": "Retrieve a Recipient List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/recipient-lists/unique_id_4_graduate_students_list?show_recipients=true",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"recipient-lists",
								"unique_id_4_graduate_students_list"
							],
							"query": [
								{
									"key": "show_recipients",
									"value": "true"
								}
							]
						},
						"description": "Retrieve details about a specified recipient list by specifying its id in the URI path.  To\nretrieve the recipients contained in a list, the list must be specified and the **show_recipients** parameter must be set to true."
					},
					"response": []
				},
				{
					"name": "List all Recipient Lists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/recipient-lists",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"recipient-lists"
							]
						},
						"description": "List a summary of all recipient lists.  The recipients for each list are not included in the\nresults.  To retrieve recipient details, use the RETRIEVE API for a specified recipient list.\n\n"
					},
					"response": []
				},
				{
					"name": "Update a Recipient List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\n      \"name\": \"updated_graduate_students\",\n      \"description\": \"An email list of graduate students at UMBC\",\n      \"attributes\": {\n          \"internal_id\": 112,\n          \"list_group_id\": 12321\n      },\n      \"recipients\": [\n          {\n              \"address\": {\n                  \"email\": \"wilmaflin@yahoo.com\",\n                  \"name\": \"Wilma\"\n              },\n              \"metadata\": {\n                  \"place\": \"Bedrock\"\n              },\n              \"substitution_data\": {\n                  \"subrcptkey\": \"subrcptvalue\"\n              },\n              \"tags\": [\n                  \"greeting\",\n                  \"prehistoric\",\n                  \"fred\",\n                  \"flintstone\"\n              ]\n          },\n          {\n              \"address\": {\n                  \"email\": \"fred.jones@flintstone.com\",\n                  \"name\": \"Grad Student Office\",\n                  \"header_to\": \"grad-student-office@flintstone.com\"\n              },\n              \"tags\": [\n                  \"driver\",\n                  \"computer science\",\n                  \"fred\",\n                  \"flintstone\"\n              ]\n          }\n      ]\n  }\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/recipient-lists/unique_id_4_graduate_students_list?num_rcpt_errors=3",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"recipient-lists",
								"unique_id_4_graduate_students_list"
							],
							"query": [
								{
									"key": "num_rcpt_errors",
									"value": "3"
								}
							]
						},
						"description": "Update an existing recipient list by specifying its ID in the URI path and use a\n**recipient list object** as the PUT request body. Use the **num_rcpt_errors** parameter to limit the number of recipient errors\nreturned.\n\nThe following are key points about updating your recipient lists:\n\n* If a non-scheduled transmission contains a recipient list, the recipient list cannot\nbe updated if the transmission is submitted or generating.\n\n* If a scheduled transmission contains a recipient list, the recipient list cannot be updated if the transmission is\ngenerating or submitted and within 10 minutes of the scheduled generation time.  \n\n* The \"id\" field is read only and cannot be changed.  If the recipient list \"id\" is provided in\nthe **recipient list object**, it must match the id parameter.\n\n* If a \"recipients\" array is provided in the update request, it must contain the complete recipient\nlist and all relevant recipient fields whether they are being changed or not.  The new recipients\nwill completely replace the existing recipients.  The number of accepted recipients and the\nnumber of rejected recipients will only be returned if a \"recipients\" array is provided in the request.\n\n* If a \"name\" field is provided in the update request, it will replace the existing\n\"name\" field for the recipient list.\n\n* If a \"description\" field is provided in the update request, it will replace the existing\n\"description\" field for the recipient list.\n\n* If an \"attributes\" object is provided in the update request, it will completely replace the existing\n\"attributes\" object for the recipient list.\n\n"
					},
					"response": []
				},
				{
					"name": "Delete a Recipient List",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/recipient-lists/unique_id_4_graduate_students_list",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"recipient-lists",
								"unique_id_4_graduate_students_list"
							]
						},
						"description": "Permanently delete the specified recipient list.\n\nOnce a recipient list is deleted, it\ncannot be recovered.  Before deleting a list, ensure that it is no longer needed and keep a backup copy.  If a deleted\nlist is needed again, the list must be resubmitted with the CREATE API.\n\nIf a transmission contains a recipient list, the recipient list cannot be deleted if the transmission is\nsubmitted or generating.  \n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Relay Webhooks",
			"description": "https://developers.sparkpost.com/api/#/reference/relay-webhooks",
			"item": [
				{
					"name": "Create a Relay Webhook (No Auth)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Replies Webhook\",\n  \"target\": \"https://webhooks.customer.example/replies\",\n  \"auth_token\": \"\",\n  \"match\":\n    {\n      \"protocol\": \"SMTP\",\n      \"domain\": \"inbounddomain.example.com\"\n    }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/relay-webhooks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"relay-webhooks"
							]
						},
						"description": "Create a relay webhook by providing a **relay webhooks object** as the POST request body.\n\n"
					},
					"response": []
				},
				{
					"name": "Create a Relay Webhook (OAUTH2)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Replies Webhook\",\n  \"target\": \"https://webhooks.customer.example/replies\",\n  \"auth_type\": \"oauth2\",\n  \"auth_request_details\": \n    {\n      \"url\": \"http://client.example.com/tokens\",\n      \"body\": \n        {\n          \"client_id\": \"CLIENT123\",\n          \"client_secret\": \"9sdfj791d2bsbf\"\n        }\n    },\n  \"auth_token\": \"\",\n  \"match\":\n    {\n      \"protocol\": \"SMTP\",\n      \"domain\": \"inbounddomain.example.com\"\n    }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/relay-webhooks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"relay-webhooks"
							]
						},
						"description": "Create a relay webhook with OAUTH2 by providing a **relay webhooks object** as the POST request body.\n\n"
					},
					"response": []
				},
				{
					"name": "List all Relay Webhooks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/relay-webhooks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"relay-webhooks"
							]
						},
						"description": "List all your relay webhooks.\n\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a Relay Webhook",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/relay-webhooks/12013026328707075",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"relay-webhooks",
								"12013026328707075"
							]
						},
						"description": "Retrieve a specific relay webhook by specifying the webhook ID in the URI path.\n\n"
					},
					"response": []
				},
				{
					"name": "Update a Relay Webhook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Replies Webhook\",\n  \"target\": \"https://webhook.customer.example/replies\",\n  \"auth_type\": \"none\"\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/relay-webhooks/12013026328707075",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"relay-webhooks",
								"12013026328707075"
							]
						},
						"description": "Update a relay webhook by specifying the webhook ID in the URI path.\n\n"
					},
					"response": []
				},
				{
					"name": "Delete a Relay Webhook",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/relay-webhooks/12013026328707075",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"relay-webhooks",
								"12013026328707075"
							]
						},
						"description": "Delete a relay webhook by specifying the webhook ID in the URI path.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Sending Domains",
			"description": "https://developers.sparkpost.com/api/#/reference/sending-domains",
			"item": [
				{
					"name": "Create a Sending Domain (auto gen DKIM)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"domain\": \"example1.com\",\n  \"tracking_domain\": \"click.example1.com\",\n  \"generate_dkim\": true,\n  \"shared_with_subaccounts\": false\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-domains",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-domains"
							]
						},
						"description": "Create a sending domain by providing a sending domain object as the POST request body.\n\nWe allow any given domain (including its subdomains) to only be used by a single customer account. Please see our support article for additional reasons a domain might not be approved for sending.\n\nSparkPost Enterprise accounts: To use a DKIM Signing Domain Identifier different to the Sending Domain, set the dkim.signing_domain field.\nSparkPost Enterprise accounts: In some configurations, Sending Domains will be set to verified automatically when they are created, and can be used to send messages immediately. In that case, there is no need to use the verify endpoint to verify Sending Domains. To find out if this applies to your SparkPost Enterprise service, please contact your TAM."
					},
					"response": []
				},
				{
					"name": "Create a Sending Domain (specified DKIM)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\" : \"example1.com\",\n    \"dkim\": {\n      \"private\" : \"<<your DKIM private key here>>\",\n        \"public\" : \"<<your DKIM public key here>>\",\n        \"selector\" : \"brisbane\",\n        \"headers\" : \"from:to:subject:date\"\n    }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-domains",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-domains"
							]
						},
						"description": "Create a sending domain by providing a sending domain object as the POST request body.\n\nWe allow any given domain (including its subdomains) to only be used by a single customer account. Please see our support article for additional reasons a domain might not be approved for sending.\n\nSparkPost Enterprise accounts: To use a DKIM Signing Domain Identifier different to the Sending Domain, set the dkim.signing_domain field.\nSparkPost Enterprise accounts: In some configurations, Sending Domains will be set to verified automatically when they are created, and can be used to send messages immediately. In that case, there is no need to use the verify endpoint to verify Sending Domains. To find out if this applies to your SparkPost Enterprise service, please contact your TAM."
					},
					"response": []
				},
				{
					"name": "List all Sending Domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-domains",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-domains"
							]
						},
						"description": "List an overview of all sending domains in the system.\n\n"
					},
					"response": []
				},
				{
					"name": "List all Sending Domains (with search params)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-domains?ownership_verified=true&dkim_status=valid&cname_status=valid&mx_status=unverified&abuse_at_status=unverified&postmaster_at_status=unverified&compliance_status=valid&is_default_bounce_domain=false",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-domains"
							],
							"query": [
								{
									"key": "ownership_verified",
									"value": "true"
								},
								{
									"key": "dkim_status",
									"value": "valid"
								},
								{
									"key": "cname_status",
									"value": "valid"
								},
								{
									"key": "mx_status",
									"value": "unverified"
								},
								{
									"key": "abuse_at_status",
									"value": "unverified"
								},
								{
									"key": "postmaster_at_status",
									"value": "unverified"
								},
								{
									"key": "compliance_status",
									"value": "valid"
								},
								{
									"key": "is_default_bounce_domain",
									"value": "false"
								}
							]
						},
						"description": "List an overview of all sending domains in the system.\n\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a Sending Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-domains/example1.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-domains",
								"example1.com"
							]
						},
						"description": "Retrieve a sending domain by specifying its domain name in the URI path.  The response includes details about its DKIM key configuration.\n\n"
					},
					"response": []
				},
				{
					"name": "Update a Sending Domain",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tracking_domain\": \"click.example1.com\",\n    \"dkim\" : {\n      \"private\" : \"MIICXgIBAAKBgQC+W6scd3XWwvC/hPRksfDYFi3ztgyS9OSqnnjtNQeDdTSD1DRx/xFar2wjmzxp2+SnJ5pspaF77VZveN3P/HVmXZVghr3asoV9WBx/uW1nDIUxU35L4juXiTwsMAbgMyh3NqIKTNKyMDy4P8vpEhtH1iv/BrwMdBjHDVCycB8WnwIDAQABAoGBAITb3BCRPBi5lGhHdn+1RgC7cjUQEbSb4eFHm+ULRwQ0UIPWHwiVWtptZ09usHq989fKp1g/PfcNzm8c78uTS6gCxfECweFCRK6EdO6cCCr1cfWvmBdSjzYhODUdQeyWZi2ozqd0FhGWoV4VHseh4iLj36DzleTLtOZj3FhAo1WJAkEA68T+KkGeDyWwvttYtuSiQCCTrXYAWTQnkIUxduCp7Ap6tVeIDn3TaXTj74UbEgaNgLhjG4bX//fdeDW6PaK9YwJBAM6xJmwHLPMgwNVjiz3u/6fhY3kaZTWcxtMkXCjh1QE82KzDwqyrCg7EFjTtFysSHCAZxXZMcivGl4TZLHnydJUCQQCx16+M+mAatuiCnvxlQUMuMiSTNK6Amzm45u9v53nlZeY3weYMYFdHdfe1pebMiwrT7MI9clKebz6svYJVmdtXAkApDAc8VuR3WB7TgdRKNWdyGJGfoD1PO1ZE4iinOcoKV+IT1UCY99Kkgg6C7j62n/8T5OpRBvd5eBPpHxP1F9BNAkEA5Nf2VO9lcTetksHdIeKK+F7sio6UZn0Rv7iUo3ALrN1D1cGfWIh/Y1g==\",\n        \"public\" : \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC+W6scd3XWwvC/hPRksfDYFi3ztgyS9OSqnnjtNQeDdTSD1DRx/xFar2wjmzxp2+SnJ5pspaF77VZveN3P/HVmXZVghr3asoV9WBx/uW1nDIUxU35L4juXiTwsMAbgMyh3NqIKTNKyMDy4P8vpEhtH1iv/BrwMdBjHDVCycB8WnwIDAQAB\",\n        \"selector\" : \"hello_selector\",\n        \"headers\" : \"from:to:subject:date\"\n    }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-domains/example1.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-domains",
								"example1.com"
							]
						},
						"description": "Update the attributes of an existing sending domain by specifying its domain name in the URI path and use a **sending domain object** as the PUT request body.\n\nIf a tracking domain is specified, it will replace any currently specified tracking domain.  If the supplied tracking domain is a blank string, it will clear any currently specified tracking domain. Note that if a tracking domain is not specified, any currently specified tracking domain will remain intact.\n\nIf a dkim object is provided in the update request, it must contain all relevant fields whether they are being changed or not.  The new dkim object will completely overwrite the existing one.\n\n**SparkPost Enterprise Accounts:** To remove the DKIM Signing Domain Identifier for a Sending Domain, use the empty string for the value of the dkim.signing_domain field."
					},
					"response": []
				},
				{
					"name": "Delete a Sending Domain",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-domains/example1.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-domains",
								"example1.com"
							]
						},
						"description": "Delete an existing sending domain.\n\n**Warning:** Before deleting a sending domain please ensure you are no longer using it. After deleting a sending domain, any new transmissions that use it will result in a rejection. This includes any transmissions that are in progress, scheduled for the future, or use a stored template referencing the sending domain.\n\n"
					},
					"response": []
				},
				{
					"name": "Verify a Sending Domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dkim_verify\": true\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-domains/example.com/verify",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-domains",
								"example.com",
								"verify"
							]
						},
						"description": "\nThe verify resource operates differently depending on the provided request fields:\n  * Including the fields `dkim_verify`, `cname_verify`, and/or `spf_verify` in the request initiates a check against the associated DNS record type for the specified sending domain.\n  * Including the fields `postmaster_at_verify` and/or `abuse_at_verify` in the request results in an email sent to the specified sending domain's postmaster@ and/or abuse@ mailbox where a verification link can be clicked.\n  * Including the fields `verification_mailbox_verify` and `verification_mailbox` in the request results in an email sent to the specified mailbox where a verification link can be clicked.\n  * For `postmaster_at_verify`, `abuse_at_verify` and `verification_mailbox_verify` ownership verification, if the request is made a 2nd time another email will be sent with a new verification link. If the link in the previously sent message is subsequently clicked it will not verify domain ownership. However, if the link in the most recent email is clicked it will verify domain ownership. \n  * Including the fields `verification_mailbox_token` and/or `postmaster_at_token` and/or `abuse_at_token` in the request initiates a check of the provided token(s) against the stored token(s) for the specified sending domain.\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Sending IPs",
			"description": null,
			"item": [
				{
					"name": "Get all Sending IPs ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-ips",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-ips"
							]
						},
						"description": "Gets all IP addresses."
					},
					"response": []
				},
				{
					"name": "Get a Sending IP",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-ips/123.456.789.012",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-ips",
								"123.456.789.012"
							]
						},
						"description": "Retrieves a specific sending IP."
					},
					"response": []
				},
				{
					"name": "Update a Sending IP",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ip_pool\": \"too_cool_for_pool\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/sending-ips/123.456.789.012",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"sending-ips",
								"123.456.789.012"
							]
						},
						"description": "Updates the IP Pool of a sending IP."
					},
					"response": []
				}
			]
		},
		{
			"name": "Subaccounts",
			"description": "https://developers.sparkpost.com/api/#/introduction/subaccounts",
			"item": [
				{
					"name": "List subaccounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/subaccounts",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"subaccounts"
							]
						},
						"description": "Endpoint for retrieving a list of your subaccounts. This endpoint only returns information about the subaccounts themselves, not the data associated with the subaccount.\n\n"
					},
					"response": []
				},
				{
					"name": "Subaccounts Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/subaccounts/summary",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"subaccounts",
								"summary"
							]
						},
						"description": "Endpoint for retrieving a list of your subaccounts. This endpoint only returns information about the subaccounts themselves, not the data associated with the subaccount.\n\n"
					},
					"response": []
				},
				{
					"name": "List specific subaccount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/subaccounts/123",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"subaccounts",
								"123"
							]
						},
						"description": "Endpoint for retrieving information about a specific subaccount.\n\n"
					},
					"response": []
				},
				{
					"name": "Create new subaccount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Sparkle Ponies\",\n  \"key_label\": \"API Key for Sparkle Ponies Subaccount\",\n  \"key_grants\": [\n    \"smtp/inject\",\n    \"sending_domains/manage\",\n    \"message_events/view\",\n    \"suppression_lists/manage\",\n    \"tracking_domains/view\",\n    \"tracking_domains/manage\",\n    \"webhooks/modify\",\n    \"webhooks/view\"\n  ],\n  \"key_valid_ips\": [],\n  \"ip_pool\": \"\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/subaccounts",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"subaccounts"
							]
						},
						"description": "Provisions a new subaccount and an initial subaccount API key. Subaccount API keys are only allowed very\nspecific grants, which are limited to: `smtp/inject`, `sending_domains/manage`, `message_events/view` and `suppression_lists/manage`.\nSubaccounts are allowed to send mail using the SMTP protocol, retrieve sending statistics via the Message Events API, and manage their own Sending Domains and Suppression List.\n\n#### Request Body Attributes\n\n| Field         | Required   | Type    | Description                                                               | Notes                                                                                                                                                         |\n| ------------  | ---------- | ------- | --------------------------------------------------------------------------| ------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| name          | yes        | string  | User friendly identifier for a specific subaccount                        |                                                                                                                                                               |\n| key_label     | no         | string  | User friendly identifier for the initial subaccount api key               | Required if `setup_api_key` is true.                                                                                                                                                              |\n| key_grants    | no         | Array   | List of grants to give to the initial subaccount api key                  | Required if `setup_api_key` is true. Valid values are `smtp/inject`, `sending_domains/manage`, `tracking_domains/view`, `tracking_domains/manage`, `message_events/view`, `suppression_lists/manage`, `transmissions/view`, `transmissions/modify`, `webhooks/view`, and `webhooks/modify` |\n| key_valid_ips | no         | Array   | List of IP's that the initial subaccount api key can be used from         | If the supplied `key_valid_ips` is an empty array, the api key is usable by any IP address                                                                    |\n| ip_pool       | no         | string  | The ID of an IP Pool in which to restrict this subaccount's mail deliveries. | If the supplied `ip_pool` is an empty string or not present, this subaccount may use any of the account's IP Pools.<br/><a href=\"https://www.sparkpost.com/enterprise-email/\"><span class=\"label label-warning\"><strong>Enterprise</strong></span></a></strong> customers: please consult with your TAM on IP management. |\n| setup_api_key | no         | boolean | Whether or not to create an API key for the subaccount                    | An API key can be created a later time. Defaults to true. |"
					},
					"response": []
				},
				{
					"name": "Edit a subaccount",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Hey Joe! Garage and Parts\",\n  \"status\": \"suspended\"\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/subaccounts/11252",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"subaccounts",
								"11252"
							]
						},
						"description": "Update an existing subaccount's information. You can update the following information associated with a subaccount:\n\n\n#### Request Body Attributes\n\n| Field   | Required   | Type   | Description                                        | Notes |\n| ------- | ---------- | ------ | -------------------------------------------------- | ----- |\n| name    | no         | string | User friendly identifier for a specific subaccount |       |\n| status  | no         | string | Status of the account                              | Value is one of `active`, `suspended`, or `terminated` |\n| ip_pool       | no         | string  | The ID of an IP Pool in which to restrict this subaccount's mail deliveries. | If the supplied `ip_pool` is an empty string or not present, this subaccount may use any of the account's IP Pools.<br/><a href=\"https://www.sparkpost.com/enterprise-email/\"><span class=\"label label-warning\"><strong>Enterprise</strong></span></a></strong> customers: please consult with your TAM on IP management. |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Suppression List",
			"description": "https://developers.sparkpost.com/api/#/reference/suppression-list",
			"item": [
				{
					"name": "Insert or Update List Entries",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipients\": [\n    {\n      \"recipient\": \"rcpt_1@example.com\",\n      \"type\": \"transactional\",\n      \"description\": \"User requested to not receive any transactional emails.\"\n    },\n    {\n      \"recipient\": \"rcpt_2@example.com\",\n      \"type\": \"non_transactional\",\n      \"description\": \"User requested to not receive any non-transactional emails.\"\n    }\n  ]\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/suppression-list/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"suppression-list",
								""
							]
						},
						"description": "Bulk insert or update entries in the customer-specific exclusion list by providing a JSON object, with a \"recipients\" key containing an array of recipients to insert or update, as the PUT request body. Maximum size of the JSON object is 50mb. At a minimum, each recipient must have a valid \"email\" address and at least one of the following keys: \"transactional\" or \"non_transactional\". The optional \"description\" key can be used to include an explanation of what type of message should be suppressed.\n\nIf the recipient entry was added to the list by Compliance, it cannot be updated.\n\nIf an email address is duplicated in a single request, only the first instance will be processed.\n\n"
					},
					"response": []
				},
				{
					"name": "Search for List Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/suppression-list?to=2018-12-31T23:59:00-0000&from=2018-01-01T23:59:00-0000&types=transactional,non_transactional&domain=example.com&per_page=10000&page=1&sources=Manually Added&description=requested to not receive",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"suppression-list"
							],
							"query": [
								{
									"key": "to",
									"value": "2018-12-31T23:59:00-0000"
								},
								{
									"key": "from",
									"value": "2018-01-01T23:59:00-0000"
								},
								{
									"key": "types",
									"value": "transactional,non_transactional"
								},
								{
									"key": "domain",
									"value": "example.com"
								},
								{
									"key": "per_page",
									"value": "10000"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "sources",
									"value": "Manually Added"
								},
								{
									"key": "description",
									"value": "requested to not receive"
								}
							]
						},
						"description": "Perform a filtered search for entries in your customer-specific exclusion list.\n\n"
					},
					"response": []
				},
				{
					"name": "Retrieve a Recipient Suppression Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/suppression-list/rcpt_1@example.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"suppression-list",
								"rcpt_1@example.com"
							]
						},
						"description": "Retrieve the suppression status for a specific recipient by specifying the recipient’s email address in the URI path.\n\nIf the recipient is not in the customer-specific exclusion list, an HTTP status of 404 is returned. If the recipient is in the list, an HTTP status of 200 is returned with the full suppression status in the response body.\n\nIn addition to the list entry attributes, the response body also includes \"created\" and \"updated\" timestamps.\n\n"
					},
					"response": []
				},
				{
					"name": "Delete a List Entry",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/suppression-list/rcpt_1@example.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"suppression-list",
								"rcpt_1@example.com"
							]
						},
						"description": "Delete a recipient from the list by specifying the recipient's email address in the URI path.\n\nIf the recipient is not in the customer-specific exclusion list, an HTTP status of 404 is returned. If the recipient is in the list, an HTTP status of 204 is returned indicating a successful deletion.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Templates",
			"description": "https://developers.sparkpost.com/api/#/reference/templates",
			"item": [
				{
					"name": "Create a Template (text and html content)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"summer_sale\",\n  \"name\": \"Summer Sale!\",\n  \"published\": true,\n  \"description\": \"Template for a Summer Sale!\",\n  \"shared_with_subaccounts\": false,\n  \"options\": {\n    \"open_tracking\": false,\n    \"click_tracking\": true\n  },\n  \"content\": {\n    \"from\": {\n      \"email\": \"marketing@bounces.company.example\",\n      \"name\": \"Example Company Marketing\"\n    },\n    \"subject\": \"Summer deals for \",\n    \"reply_to\": \"Summer deals <summer_deals@company.example>\",\n    \"text\": \"Check out these deals !\",\n    \"html\": \"<b>Check out these deals !</b>\",\n    \"headers\": {\n      \"X-Customer-Campaign-ID\": \"Summer2014\"\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/templates",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Create a template by providing a **template object** as the POST request body.\n\nAt a minimum, the \"name\" and \"content\" fields are required, where content must contain the \"from\", \"subject\", and at least one of \"html\" or \"text\" fields.\n\nBy default, when a template is referenced in a transmission, it is the published version of that template.  To submit a transmission that uses a draft template, set the transmission field \"use_draft_template\" to true.  For additional details, see the Transmissions API documentation for Using a Stored Template.\n\n\n#### Create Parts\n\nThe following are key points about creating parts in your templates, as shown in the example:\n\n* The \"id\" field may be supplied, and it must be unique.\n\n* By default, templates are created as drafts.  If you would like to directly publish a template upon creation, set the \"published\" field to true.\n\n* Open and click tracking may be enable/disabled at the template level using the \"open_tracking\" and\n\"click_tracking\" fields.\n\n* The \"from\" field may be a JSON object composed of \"email\" and \"name\".\n\n* A \"Reply-To\" header may be specified using the \"reply_to\" field.\n\n* Both \"text\" and \"html\" may be provided.\n\n* Additional headers may be specified in the \"headers\" JSON dictionary."
					},
					"response": []
				},
				{
					"name": "Create a Template (RFC822 content)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"another_summer_sale\",\n  \"name\" : \"Summer Sale!\",\n  \"published\" : true,\n\n  \"options\": {\n    \"open_tracking\" : false,\n    \"click_tracking\" : true\n  },\n\n  \"content\": {\n    \"email_rfc822\" : \"Content-Type: text/plain\\nFrom: Example Company Marketing <marketing@bounces.company.example>\\nReply-To:Summer deals <summer_deals@company.example>\\nX-Customer-Campaign-ID: Summer2014\\nSubject: Summer deals for {{name}}\\n\\nCheck out these deals {{name}}!\"\n  }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/templates",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Create a template by providing a **template object** as the POST request body.\n\nAt a minimum, the \"name\" and \"content\" fields are required, where content must contain the \"from\", \"subject\", and at least one of \"html\" or \"text\" fields.\n\nBy default, when a template is referenced in a transmission, it is the published version of that template.  To submit a transmission that uses a draft template, set the transmission field \"use_draft_template\" to true.  For additional details, see the Transmissions API documentation for Using a Stored Template.\n\n\n#### Create Parts\n\nThe following are key points about creating parts in your templates, as shown in the example:\n\n* The \"id\" field may be supplied, and it must be unique.\n\n* By default, templates are created as drafts.  If you would like to directly publish a template upon creation, set the \"published\" field to true.\n\n* Open and click tracking may be enable/disabled at the template level using the \"open_tracking\" and\n\"click_tracking\" fields.\n\n* The \"from\" field may be a JSON object composed of \"email\" and \"name\".\n\n* A \"Reply-To\" header may be specified using the \"reply_to\" field.\n\n* Both \"text\" and \"html\" may be provided.\n\n* Additional headers may be specified in the \"headers\" JSON dictionary.\n\n\n#### Create RFC822\n\nFully formed email_rfc822 content may be provided instead of the \"text\", \"html\", \"from\", and \"subject\" parts, as shown in the example.\n\n\n\n"
					},
					"response": []
				},
				{
					"name": "List all Templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/templates?",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Lists the most recent version of each template in your account. Each template object in the list will have the following fields:\n\n- id: Unique template ID\n\n- name: Template name\n\n- published: Published state of the template (true = published, false = draft)\n\n- description: Template description\n\n- last_update_time: The time the template was last updated.\n\n- has_draft: flag indicating whether the template has a draft version.\n\n- has_published: flag indicating whether the template has a published version.\n\nAdditional, templates owned by the Master subaccount will have the following field:\n\n- shared_with_subaccounts: Whether the template is shared with subaccounts."
					},
					"response": []
				},
				{
					"name": "Retrieve a Template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/templates/11714265276872?",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"11714265276872"
							]
						},
						"description": "Retrieve a single template by specifying its ID in the URI path. By default, the most recently\nupdated version is returned. Use the **draft** query parameter to specify a draft or published\ntemplate.\n\n\nThe result will include a \"last_update_time\" field. The \"last_update_time\" is the time the template was last updated, for both draft and published versions.\n\nIf the template was used for message generation, the result will also include a \"last_use\" field. The \"last_use\" time represents the last time any version of this template was used (draft or published).\n\n\n"
					},
					"response": []
				},
				{
					"name": "Update a Template",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"options\": {\n    \"open_tracking\": true\n  },\n  \"name\": \"A new name!\",\n  \"shared_with_subaccounts\": true,\n  \"content\": {\n    \"from\": {\n      \"email\": \"marketing@bounces.company.example\",\n      \"name\": \"Example Company Marketing\"\n    },\n    \"subject\": \"Updated Summer deals for \",\n    \"reply_to\": \"Summer deals <summer_deals@company.example>\",\n    \"text\": \"Updated: Check out these deals !\",\n    \"html\": \"<b>Updated: Check out these deals !</b>\"\n  }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/templates/another_summer_sale?update_published=true",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"another_summer_sale"
							],
							"query": [
								{
									"key": "update_published",
									"value": "true"
								}
							]
						},
						"description": "Update an existing template by specifying its ID in the URI path and use a **template object** as the PUT request body.\nBy default, the update will result in a new draft version, but the published version can be overwritten directly by using the **update_published** query parameter.\n\nThe \"name\" field may be modified, but the \"id\" field is read only.\n\nIf a content object is provided in the update request, it must\ncontain all relevant content fields whether they are being changed or not.\nThe new content will completely overwrite the existing content.\n\nThe example shows an update that will rename the template, enable open tracking,\nand update the content all in one API call. All content fields are included whether they are being\nchanged or not.\n\nPublishing a template is a specific case of an update.  The body of the PUT\nrequest should contain the `\"published\": true` field as shown in the example. The\n**update_published** query parameter does not apply.\n\n"
					},
					"response": []
				},
				{
					"name": "Update a Template (draft->published)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"published\": true\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/templates/another_summer_sale?update_published=false",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"another_summer_sale"
							],
							"query": [
								{
									"key": "update_published",
									"value": "false"
								}
							]
						},
						"description": "Publishing a template is a special kind of update. It uses the most recent draft version to create a new published version, even if one does not already exist. The body of the PUT request should contain the `\"published\": true` field as shown.\nWhen publishing a draft template, `update_published` should be omitted, or specified as false."
					},
					"response": []
				},
				{
					"name": "Preview a Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"substitution_data\" : {\n    \"name\" : \"Natalie\",\n    \"age\" : 35,\n    \"member\" : true\n  }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/templates/another_summer_sale/preview?draft=true",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"another_summer_sale",
								"preview"
							],
							"query": [
								{
									"key": "draft",
									"value": "true"
								}
							]
						},
						"description": "Preview the most recent version of an existing template by specifying {id}/preview in the URI path\nand providing \"substitution_data\" as part of the POST request body.\nThe template's content will be expanded using the substitution data provided and returned\nin the response. By default, the most recently updated version is returned.  Use the **draft** query parameter to specify a draft or published\ntemplate.\n\nSee the Substitutions Reference section for more information.\n\n"
					},
					"response": []
				},
				{
					"name": "Delete a Template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/templates/another_summer_sale",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"another_summer_sale"
							]
						},
						"description": "Delete a template by specifying its ID in the URI path.\nIf the template delete API call succeeds, then ALL versions of the template will be deleted from the system (both published AND draft versions).\n\nIf a transmission uses a stored template, the template cannot be deleted if the transmission is submitted or generating.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Tracking Domains",
			"description": "https://developers.sparkpost.com/api/#/reference/tracking-domains",
			"item": [
				{
					"name": "Create a Tracking Domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"domain\": \"example.domain.com\",\n  \"secure\": false,\n  \"default\": false\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/tracking-domains",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"tracking-domains"
							]
						},
						"description": "Create a tracking domain. A tracking domain cannot be set as the default until it is verified.\n\n**Note**: The value for <tt>port</tt> is not configurable. <tt>port</tt> will be 80 for Non-Secure and 443 for Secure.</div>"
					},
					"response": []
				},
				{
					"name": "List all Tracking Domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/tracking-domains",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"tracking-domains"
							]
						},
						"description": "Retrieve a list of all tracking domains."
					},
					"response": []
				},
				{
					"name": "Retrieve a Tracking Domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/tracking-domains/example.domain.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"tracking-domains",
								"example.domain.com"
							]
						},
						"description": "Retrieve an existing tracking domain."
					},
					"response": []
				},
				{
					"name": "Update a Tracking Domain",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secure\"  : true,\n    \"default\" : true\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/tracking-domains/example.domain.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"tracking-domains",
								"example.domain.com"
							]
						},
						"description": "Update the attributes of an existing tracking domain.  A tracking domain cannot be\nset as the default until it is verified.  If a tracking domain is set to the default,\nand there is already a default domain, the default is changed.\n\n**NOTE:** For SparkPost, port and secure cannot be updated.\n\n"
					},
					"response": []
				},
				{
					"name": "Delete a Tracking Domain",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/tracking-domains/example.domain.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"tracking-domains",
								"example.domain.com"
							]
						},
						"description": "Delete an existing tracking domain.\n\n"
					},
					"response": []
				},
				{
					"name": "Verify a Tracking Domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/tracking-domains/example.domain.com/verify",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"tracking-domains",
								"example.domain.com",
								"verify"
							]
						},
						"description": "Initiate a check against the CNAME DNS record for the specified tracking domain. The domain's `status` object is returned on success.\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Transmissions",
			"description": "https://developers.sparkpost.com/api/#/reference/transmissions",
			"item": [
				{
					"name": "Create a Transmission (inline text/html and recipients)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"campaign_id\": \"postman_inline_both_example\",\n  \"recipients\": [\n    {\n      \"address\": \"wilma@example.sink.sparkpostmail.com\"\n    }\n  ],\n  \"content\": {\n    \"from\": {\n      \"email\": \"marketing@example.sink.sparkpostmail.com\",\n      \"name\": \"Example Company\"\n    },\n\n    \"subject\": \"SparkPost inline template example\",\n    \"html\": \"<html><body>Here is your inline html, {{first_name or 'you great person'}}!<br></body></html>\",\n    \"text\": \"Here is your plain text, {{first_name or 'you great person'}}!\"\n  }\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/transmissions",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"transmissions"
							]
						},
						"description": "You can create a transmission in a number of ways.\n\n**Note**: Sending limits apply to SparkPost accounts only. When a transmission is created, the number of messages in the transmission is compared to the sending limit of your account. If the transmission will cause you to exceed your sending limit, the entire transmission results in an error and no messages are sent.  Note that no messages will be sent for the given transmission, regardless of the number of messages that caused you to exceed your sending limit. In this case, the Transmission API will return an HTTP 420 error code with an error detailing whether you would exceed your hourly, daily, or sandbox sending limit.</div>\n\n#### Using Inline Email Part Content\n\nCreate a transmission using inline email part content.\n\n#### Using Inline RFC822 Content\n\nCreate a transmission using inline RFC822 content. Content headers are not generated for transmissions providing RFC822 content. They are expected to be provided as headers contained in the RFC822 content.\n\n#### Using a Stored Recipients List\n\nCreate a transmission using a stored recipients list by specifying the `list_id` in the `recipients` attribute.\n\n#### Using a Stored Template\n\nCreate a transmission using a stored template by specifying the `template_id` in the `content` attribute.  The `use_draft_template` field is optional and indicates whether to use a draft version or the published version of the template when generating messages.\n\n#### Scheduling Transmissions\n\nCreate a scheduled transmission to be generated and sent at a future time by specifying `start_time` in the `options` attribute.\n\nScheduling a transmission that specifies a stored template will use the LATEST version of the template available at the time of scheduled generation.  The use of published versus draft versions follows the same logic in all transmission requests, whether scheduled or immediate generation. When `use_draft_template` is not specified (or set to false), the latest published version of the specified stored template is used. If `use_draft_template` is set to `true`, the latest draft version is used in the transmission instead.\n\nOnce message generation has been initiated, all messages in the transmission will use the template selected at the start of the generation. If a template update is made during the generation of a transmission that uses that template, the template update will succeed but the transmission will continue to use the version that was selected at the start of the generation."
					},
					"response": []
				},
				{
					"name": "Create a Transmission (inline RFC822 content and recipients)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"options\": {\n    \"open_tracking\": true,\n    \"click_tracking\": true,\n    \"transactional\": false,\n    \"sandbox\": false,\n    \"inline_css\": false\n  },\n  \"description\": \"Christmas Campaign Email\",\n  \"campaign_id\": \"christmas_campaign\",\n  \"metadata\": {\n    \"user_type\": \"students\",\n    \"education_level\": \"college\"\n  },\n  \"substitution_data\": {\n    \"sender\": \"Big Store Team\",\n    \"holiday_name\": \"Christmas\"\n  },\n  \"recipients\": [\n    {\n      \"address\": {\n        \"email\": \"wilma@example.sink.sparkpostmail.com\",\n        \"name\": \"Wilma Flintstone\"\n      },\n      \"tags\": [\n        \"greeting\",\n        \"prehistoric\",\n        \"fred\",\n        \"flintstone\"\n      ],\n      \"metadata\": {\n        \"age\": \"24\",\n        \"place\": \"Bedrock\"\n      },\n      \"substitution_data\": {\n        \"first_name\": \"Wilma\",\n        \"customer_type\": \"Platinum\",\n        \"year\": \"Freshman\"\n      }\n    },\n    {\n      \"address\": {\n        \"email\": \"abc@example.sink.sparkpostmail.com\",\n        \"name\": \"Fred Flintstone\"\n      },\n      \"tags\": [\n        \"greeting\",\n        \"prehistoric\",\n        \"fred\",\n        \"flintstone\"\n      ],\n      \"metadata\": {\n        \"age\": \"33\",\n        \"place\": \"NY\"\n      },\n      \"substitution_data\": {\n        \"first_name\": \"Fred\",\n        \"customer_type\": \"Silver\",\n        \"year\": \"Senior\"\n      }\n    }\n  ],\n  \"content\": {\n    \"email_rfc822\": \"Content-Type: text/plain\\nFrom: Example Company Marketing <marketing@bounces.company.example>\\nReply-To:Summer deals <summer_deals@company.example>\\nX-Customer-Campaign-ID: Summer2014\\nSubject: Summer deals for {{name}}\\n\\nCheck out these deals {{name}}!\"\n  }\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/transmissions",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"transmissions"
							]
						},
						"description": "You can create a transmission in a number of ways.\n\n**Note**: Sending limits apply to SparkPost accounts only. When a transmission is created, the number of messages in the transmission is compared to the sending limit of your account. If the transmission will cause you to exceed your sending limit, the entire transmission results in an error and no messages are sent.  Note that no messages will be sent for the given transmission, regardless of the number of messages that caused you to exceed your sending limit. In this case, the Transmission API will return an HTTP 420 error code with an error detailing whether you would exceed your hourly, daily, or sandbox sending limit.</div>\n\n#### Using Inline Email Part Content\n\nCreate a transmission using inline email part content.\n\n#### Using Inline RFC822 Content\n\nCreate a transmission using inline RFC822 content. Content headers are not generated for transmissions providing RFC822 content. They are expected to be provided as headers contained in the RFC822 content.\n\n#### Using a Stored Recipients List\n\nCreate a transmission using a stored recipients list by specifying the `list_id` in the `recipients` attribute.\n\n#### Using a Stored Template\n\nCreate a transmission using a stored template by specifying the `template_id` in the `content` attribute.  The `use_draft_template` field is optional and indicates whether to use a draft version or the published version of the template when generating messages.\n\n#### Scheduling Transmissions\n\nCreate a scheduled transmission to be generated and sent at a future time by specifying `start_time` in the `options` attribute.\n\nScheduling a transmission that specifies a stored template will use the LATEST version of the template available at the time of scheduled generation.  The use of published versus draft versions follows the same logic in all transmission requests, whether scheduled or immediate generation. When `use_draft_template` is not specified (or set to false), the latest published version of the specified stored template is used. If `use_draft_template` is set to `true`, the latest draft version is used in the transmission instead.\n\nOnce message generation has been initiated, all messages in the transmission will use the template selected at the start of the generation. If a template update is made during the generation of a transmission that uses that template, the template update will succeed but the transmission will continue to use the version that was selected at the start of the generation."
					},
					"response": []
				},
				{
					"name": "Create a Transmission (stored template, inline recipients)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"campaign_id\": \"postman_template_example\",\n  \"recipients\": [\n    {\n      \"address\": \"wilma@example.sink.sparkpostmail.com\"\n    }\n  ],\n  \"content\": {\n    \"template_id\": \"summer_sale\"\n  }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/transmissions",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"transmissions"
							]
						},
						"description": "You can create a transmission in a number of ways.\n\n**Note**: Sending limits apply to SparkPost accounts only. When a transmission is created, the number of messages in the transmission is compared to the sending limit of your account. If the transmission will cause you to exceed your sending limit, the entire transmission results in an error and no messages are sent.  Note that no messages will be sent for the given transmission, regardless of the number of messages that caused you to exceed your sending limit. In this case, the Transmission API will return an HTTP 420 error code with an error detailing whether you would exceed your hourly, daily, or sandbox sending limit.</div>\n\n#### Using Inline Email Part Content\n\nCreate a transmission using inline email part content.\n\n#### Using Inline RFC822 Content\n\nCreate a transmission using inline RFC822 content. Content headers are not generated for transmissions providing RFC822 content. They are expected to be provided as headers contained in the RFC822 content.\n\n#### Using a Stored Recipients List\n\nCreate a transmission using a stored recipients list by specifying the `list_id` in the `recipients` attribute.\n\n#### Using a Stored Template\n\nCreate a transmission using a stored template by specifying the `template_id` in the `content` attribute.  The `use_draft_template` field is optional and indicates whether to use a draft version or the published version of the template when generating messages.\n\n#### Scheduling Transmissions\n\nCreate a scheduled transmission to be generated and sent at a future time by specifying `start_time` in the `options` attribute.\n\nScheduling a transmission that specifies a stored template will use the LATEST version of the template available at the time of scheduled generation.  The use of published versus draft versions follows the same logic in all transmission requests, whether scheduled or immediate generation. When `use_draft_template` is not specified (or set to false), the latest published version of the specified stored template is used. If `use_draft_template` is set to `true`, the latest draft version is used in the transmission instead.\n\nOnce message generation has been initiated, all messages in the transmission will use the template selected at the start of the generation. If a template update is made during the generation of a transmission that uses that template, the template update will succeed but the transmission will continue to use the version that was selected at the start of the generation."
					},
					"response": []
				},
				{
					"name": "Create a Transmission (metadata with stored template and inline recipients)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"campaign_id\": \"postman_metadata_example\",\n  \"recipients\": [\n    {\n      \"address\": \"wilma@example.sink.sparkpostmail.com\",\n      \"metadata\": {\n        \"unique_id\": 424242\n      },\n      \"substitution_data\": {\n        \"first_name\": \"Wilma\"\n      }\n    }\n  ],\n  \"content\": {\n    \"template_id\": \"summer_sale\"\n  }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/transmissions",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"transmissions"
							]
						},
						"description": "You can create a transmission in a number of ways.\n\n**Note**: Sending limits apply to SparkPost accounts only. When a transmission is created, the number of messages in the transmission is compared to the sending limit of your account. If the transmission will cause you to exceed your sending limit, the entire transmission results in an error and no messages are sent.  Note that no messages will be sent for the given transmission, regardless of the number of messages that caused you to exceed your sending limit. In this case, the Transmission API will return an HTTP 420 error code with an error detailing whether you would exceed your hourly, daily, or sandbox sending limit.</div>\n\n#### Using Inline Email Part Content\n\nCreate a transmission using inline email part content.\n\n#### Using Inline RFC822 Content\n\nCreate a transmission using inline RFC822 content. Content headers are not generated for transmissions providing RFC822 content. They are expected to be provided as headers contained in the RFC822 content.\n\n#### Using a Stored Recipients List\n\nCreate a transmission using a stored recipients list by specifying the `list_id` in the `recipients` attribute.\n\n#### Using a Stored Template\n\nCreate a transmission using a stored template by specifying the `template_id` in the `content` attribute.  The `use_draft_template` field is optional and indicates whether to use a draft version or the published version of the template when generating messages.\n\n#### Scheduling Transmissions\n\nCreate a scheduled transmission to be generated and sent at a future time by specifying `start_time` in the `options` attribute.\n\nScheduling a transmission that specifies a stored template will use the LATEST version of the template available at the time of scheduled generation.  The use of published versus draft versions follows the same logic in all transmission requests, whether scheduled or immediate generation. When `use_draft_template` is not specified (or set to false), the latest published version of the specified stored template is used. If `use_draft_template` is set to `true`, the latest draft version is used in the transmission instead.\n\nOnce message generation has been initiated, all messages in the transmission will use the template selected at the start of the generation. If a template update is made during the generation of a transmission that uses that template, the template update will succeed but the transmission will continue to use the version that was selected at the start of the generation."
					},
					"response": []
				},
				{
					"name": "Create a Scheduled Transmission (stored template, inline recips)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"campaign_id\": \"postman_metadata_example\",\n  \"options\": {\n    \"start_time\": \"2018-03-31T08:00:00-00:00\",\n    \"open_tracking\": true,\n    \"click_tracking\": true\n  },\n  \"recipients\": [\n    {\n      \"address\": \"wilma@example.sink.sparkpostmail.com\",\n      \"metadata\": {\n        \"unique_id\": 424242\n      },\n      \"substitution_data\": {\n        \"first_name\": \"Wilma\"\n      }\n    }\n  ],\n  \"content\": {\n    \"template_id\": \"summer_sale\"\n  }\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/transmissions",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"transmissions"
							]
						},
						"description": "You can create a transmission in a number of ways.\n\n**Note**: Sending limits apply to SparkPost accounts only. When a transmission is created, the number of messages in the transmission is compared to the sending limit of your account. If the transmission will cause you to exceed your sending limit, the entire transmission results in an error and no messages are sent.  Note that no messages will be sent for the given transmission, regardless of the number of messages that caused you to exceed your sending limit. In this case, the Transmission API will return an HTTP 420 error code with an error detailing whether you would exceed your hourly, daily, or sandbox sending limit.</div>\n\n#### Using Inline Email Part Content\n\nCreate a transmission using inline email part content.\n\n#### Using Inline RFC822 Content\n\nCreate a transmission using inline RFC822 content. Content headers are not generated for transmissions providing RFC822 content. They are expected to be provided as headers contained in the RFC822 content.\n\n#### Using a Stored Recipients List\n\nCreate a transmission using a stored recipients list by specifying the `list_id` in the `recipients` attribute.\n\n#### Using a Stored Template\n\nCreate a transmission using a stored template by specifying the `template_id` in the `content` attribute.  The `use_draft_template` field is optional and indicates whether to use a draft version or the published version of the template when generating messages.\n\n#### Scheduling Transmissions\n\nCreate a scheduled transmission to be generated and sent at a future time by specifying `start_time` in the `options` attribute.\n\nScheduling a transmission that specifies a stored template will use the LATEST version of the template available at the time of scheduled generation.  The use of published versus draft versions follows the same logic in all transmission requests, whether scheduled or immediate generation. When `use_draft_template` is not specified (or set to false), the latest published version of the specified stored template is used. If `use_draft_template` is set to `true`, the latest draft version is used in the transmission instead.\n\nOnce message generation has been initiated, all messages in the transmission will use the template selected at the start of the generation. If a template update is made during the generation of a transmission that uses that template, the template update will succeed but the transmission will continue to use the version that was selected at the start of the generation."
					},
					"response": []
				},
				{
					"name": "Retrieve a Scheduled Transmission",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/transmissions/66806922810419717",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"transmissions",
								"66806922810419717"
							]
						},
						"description": "Retrieve the details about a scheduled transmission by specifying its ID in the URI path.\n\nThe response for a transmission using an inline template will include \"template_id\":\"inline\". Inline templates cannot be specifically queried.\n\n**Note:** Only multi-recipient transmissions that have been submitted or completed within the last 24 hours are returned.\n\n**Note:** Only scheduled transmissions are returned by this endpoint. Immediate transmissions cannot be retrieved."
					},
					"response": []
				},
				{
					"name": "List All Scheduled Transmissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "campaign_id",
								"value": "postman_metadata_example"
							},
							{
								"key": "template_id",
								"value": "summer_sale"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/transmissions?",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"transmissions"
							]
						},
						"description": "List an array of live transmission summary objects.  A transmission summary object contains `id`, `state`, `template_id`, `campaign_id` and `description` fields. \n\nBy default, the list includes transmissions for all campaigns and templates.  Use the `template_id` parameter to filter by template and `campaign_id` to filter by campaign. The summary for transmissions using an inline template will include `\"template_id\": \"inline\"`.  Transmissions using inline templates cannot be filtered with `template_id`.\n\n**Note**: Only multi-recipient transmissions that have been submitted or completed within the last 24 hours are returned.</div>\n\n**Note**: Only scheduled transmissions are returned by this endpoint. Immediate transmissions cannot be retrieved.</div>\n\nParameters\n+ campaign_id (optional, string,`thanksgiving`) ... ID of the campaign used by the transmissions\n+ template_id (optional, string, `thanksgiving-template`) ... ID of the template used by the transmissions"
					},
					"response": []
				},
				{
					"name": "Delete a Transmission",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/transmissions/66806922810419717",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"transmissions",
								"66806922810419717"
							]
						},
						"description": "Delete a transmission by specifying its ID in the URI path.\n\nOnly transmissions which are scheduled for future generation may be deleted.\n\nScheduled transmissions cannot be deleted if the transmission is within 10 minutes of the scheduled generation time.\n\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Webhooks",
			"description": "https://developers.sparkpost.com/api/#/reference/webhooks",
			"item": [
				{
					"name": "Documentation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks/events/documentation",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"events",
								"documentation"
							]
						},
						"description": "List descriptions of the events, event types, and event fields that could be included in a Webhooks post to your target URL.\n\n"
					},
					"response": []
				},
				{
					"name": "Samples",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks/events/samples?events=bounce,out_of_band",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"events",
								"samples"
							],
							"query": [
								{
									"key": "events",
									"value": "bounce,out_of_band"
								}
							]
						},
						"description": "List an example of the event data that will be posted by a Webhook for the specified events.\n\n**Note:** the data that will arrive at your target URL will **not** contain the top level ``results`` key shown in the example response.\n\n"
					},
					"response": []
				},
				{
					"name": "Create a Webhook (No Auth, all events, http)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Example webhook\",\n    \"target\": \"http://client.example.com/example-webhook\",\n    \"events\": [\n        \"bounce\", \n        \"delivery\", \n        \"injection\", \n        \"sms_status\", \n        \"spam_complaint\", \n        \"out_of_band\", \n        \"policy_rejection\", \n        \"delay\", \n        \"click\", \n        \"open\", \n        \"initial_open\", \n        \"generation_failure\", \n        \"generation_rejection\", \n        \"list_unsubscribe\", \n        \"link_unsubscribe\", \n        \"relay_injection\", \n        \"relay_rejection\", \n        \"relay_delivery\", \n        \"relay_tempfail\", \n        \"relay_permfail\"\n    ]\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks"
							]
						},
						"description": "Create a webhook by providing a **webhooks object** as the POST request body.  On creation, events will\nbegin to be pushed to the target URL specified in the POST request body.\n\nAs described in \"Webhooks Object Properties\", webhook creation entails a test POST request to the URL given as the _target_ value. If this request does not receive an HTTP 200 response, your request to the Webhook API will fail with HTTP 400, and the webhook will not be created. If created successfully, the webhook will begin to receive event data after 1 minute.\n\n## Webhooks Object Properties\n\n| Property          | Type   | Description | Required | Notes |\n|-------------------|--------|-------------|----------|-------|\n| name              | string | User-friendly name for webhook | yes | example: `Example webhook` |\n| target            | string | URL of the target to which to POST event batches | yes |  When a webhook is created or updated with a change to this property, a test POST request is sent to the given URL. The target URL must accept the connection and respond with HTTP 200; otherwise, your request to the Webhook API will fail with HTTP 400, and the requested change will not be applied.<br />example: `http://client.example.com/example-webhook` |\n| events            | array  | Array of event types this webhook will receive | yes | Use the Webhooks Events endpoint to list the available event types.<br />example: `[\"delivery\", \"injection\", \"open\", \"click\"]`|\n| active            | boolean | Describes status of the webhook | no | Defaults to true, when false the target will no longer receive batches |\n| custom_headers    | JSON   | Object of custom headers to be used during POST requests to target | no | example: `{\"x-api-key\" : \"abcd\"}` |\n| auth_type         | string | Type of authentication to be used during POST requests to target | no | examples: `none`, `basic`, `oauth2` |\n| auth_request_details | JSON | Object containing details needed to request authorization credentials, as necessary | no | example: `{ \"url\": \"https://oauth.myurl.com/tokens\", \"body\": { \"client_id\": \"<oauth client id>\", \"client_secret\": \"<oauth client secret>\" }}`|\n| auth_credentials         | JSON | Object containing credentials needed to make authorized POST requests to target | no | examples: `{ \"access_token\": \"<oauth token>\", expires_in: 3600 }`, `{ \"username\": \"basicauthuser\", \"password\": \"mypassword\" }` |\n| auth_token        | string | Authentication token to present in the `X-MessageSystems-Webhook-Token` header of POST requests to target | no | Use this token in your target application to confirm that data is coming from the Webhooks API. <br />example: `5ebe2294ecd0e0f08eab7690d2a6ee69`<br /><br /><span class=\"label label-danger\"><strong>Deprecated</strong></span> in favor of the `auth_type` field. |"
					},
					"response": []
				},
				{
					"name": "Create a Webhook (Basic Auth, selected events, https)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Example webhook\",\n    \"target\": \"https://client.example.com/example-webhook\",\n    \"custom_headers\": {\n        \"x-api-key\": \"abcd\"\n    },\n    \"events\": [\n        \"delivery\",\n        \"injection\",\n        \"open\",\n        \"click\"\n    ],\n    \"auth_type\": \"basic\",\n    \"auth_credentials\": {\n        \"username\": \"myusername\",\n        \"password\": \"mypassword\"\n    }\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks"
							]
						},
						"description": "Create a webhook by providing a **webhooks object** as the POST request body.  On creation, events will\nbegin to be pushed to the target URL specified in the POST request body.\n\nAs described in \"Webhooks Object Properties\", webhook creation entails a test POST request to the URL given as the _target_ value. If this request does not receive an HTTP 200 response, your request to the Webhook API will fail with HTTP 400, and the webhook will not be created. If created successfully, the webhook will begin to receive event data after 1 minute.\n\n## Webhooks Object Properties\n\n| Property          | Type   | Description | Required | Notes |\n|-------------------|--------|-------------|----------|-------|\n| name              | string | User-friendly name for webhook | yes | example: `Example webhook` |\n| target            | string | URL of the target to which to POST event batches | yes |  When a webhook is created or updated with a change to this property, a test POST request is sent to the given URL. The target URL must accept the connection and respond with HTTP 200; otherwise, your request to the Webhook API will fail with HTTP 400, and the requested change will not be applied.<br />example: `http://client.example.com/example-webhook` |\n| events            | array  | Array of event types this webhook will receive | yes | Use the Webhooks Events endpoint to list the available event types.<br />example: `[\"delivery\", \"injection\", \"open\", \"click\"]`|\n| active            | boolean | Describes status of the webhook | no | Defaults to true, when false the target will no longer receive batches |\n| custom_headers    | JSON   | Object of custom headers to be used during POST requests to target | no | example: `{\"x-api-key\" : \"abcd\"}` |\n| auth_type         | string | Type of authentication to be used during POST requests to target | no | examples: `none`, `basic`, `oauth2` |\n| auth_request_details | JSON | Object containing details needed to request authorization credentials, as necessary | no | example: `{ \"url\": \"https://oauth.myurl.com/tokens\", \"body\": { \"client_id\": \"<oauth client id>\", \"client_secret\": \"<oauth client secret>\" }}`|\n| auth_credentials         | JSON | Object containing credentials needed to make authorized POST requests to target | no | examples: `{ \"access_token\": \"<oauth token>\", expires_in: 3600 }`, `{ \"username\": \"basicauthuser\", \"password\": \"mypassword\" }` |\n| auth_token        | string | Authentication token to present in the `X-MessageSystems-Webhook-Token` header of POST requests to target | no | Use this token in your target application to confirm that data is coming from the Webhooks API. <br />example: `5ebe2294ecd0e0f08eab7690d2a6ee69`<br /><br /><span class=\"label label-danger\"><strong>Deprecated</strong></span> in favor of the `auth_type` field. |"
					},
					"response": []
				},
				{
					"name": "Create a Webhook (OAUTH2, selected events, https)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Example webhook\",\n  \"target\": \"https://client.example.com/example-webhook\",\n  \"custom_headers\": {\n    \"x-api-key\": \"abcd\"\n  },\n  \"auth_type\": \"oauth2\",\n  \"auth_request_details\": {\n    \"url\": \"http://client.example.com/tokens\",\n    \"body\": {\n      \"client_id\": \"CLIENT123\",\n      \"client_secret\": \"9sdfj791d2bsbf\",\n      \"grant_type\": \"client_credentials\"\n    }\n  },\n  \"events\": [\n    \"delivery\",\n    \"injection\",\n    \"open\",\n    \"click\"\n  ]\n}\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks"
							]
						},
						"description": "Create a webhook by providing a **webhooks object** as the POST request body.  On creation, events will\nbegin to be pushed to the target URL specified in the POST request body.\n\nAs described in \"Webhooks Object Properties\", webhook creation entails a test POST request to the URL given as the _target_ value. If this request does not receive an HTTP 200 response, your request to the Webhook API will fail with HTTP 400, and the webhook will not be created. If created successfully, the webhook will begin to receive event data after 1 minute.\n\n## Webhooks Object Properties\n\n| Property          | Type   | Description | Required | Notes |\n|-------------------|--------|-------------|----------|-------|\n| name              | string | User-friendly name for webhook | yes | example: `Example webhook` |\n| target            | string | URL of the target to which to POST event batches | yes |  When a webhook is created or updated with a change to this property, a test POST request is sent to the given URL. The target URL must accept the connection and respond with HTTP 200; otherwise, your request to the Webhook API will fail with HTTP 400, and the requested change will not be applied.<br />example: `http://client.example.com/example-webhook` |\n| events            | array  | Array of event types this webhook will receive | yes | Use the Webhooks Events endpoint to list the available event types.<br />example: `[\"delivery\", \"injection\", \"open\", \"click\"]`|\n| active            | boolean | Describes status of the webhook | no | Defaults to true, when false the target will no longer receive batches |\n| custom_headers    | JSON   | Object of custom headers to be used during POST requests to target | no | example: `{\"x-api-key\" : \"abcd\"}` |\n| auth_type         | string | Type of authentication to be used during POST requests to target | no | examples: `none`, `basic`, `oauth2` |\n| auth_request_details | JSON | Object containing details needed to request authorization credentials, as necessary | no | example: `{ \"url\": \"https://oauth.myurl.com/tokens\", \"body\": { \"client_id\": \"<oauth client id>\", \"client_secret\": \"<oauth client secret>\" }}`|\n| auth_credentials         | JSON | Object containing credentials needed to make authorized POST requests to target | no | examples: `{ \"access_token\": \"<oauth token>\", expires_in: 3600 }`, `{ \"username\": \"basicauthuser\", \"password\": \"mypassword\" }` |\n| auth_token        | string | Authentication token to present in the `X-MessageSystems-Webhook-Token` header of POST requests to target | no | Use this token in your target application to confirm that data is coming from the Webhooks API. <br />example: `5ebe2294ecd0e0f08eab7690d2a6ee69`<br /><br /><span class=\"label label-danger\"><strong>Deprecated</strong></span> in favor of the `auth_type` field. |"
					},
					"response": []
				},
				{
					"name": "Retrieve Webhook Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks/1aec8840-2c8d-11e8-b82e-bbe109e4e3a4?timezone=America/New_York",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"1aec8840-2c8d-11e8-b82e-bbe109e4e3a4"
							],
							"query": [
								{
									"key": "timezone",
									"value": "America/New_York"
								}
							]
						},
						"description": "Retrieve details about a webhook by specifying its id in the URI path.\n\n"
					},
					"response": []
				},
				{
					"name": "List all Webhooks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks?timezone=America/New_York",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks"
							],
							"query": [
								{
									"key": "timezone",
									"value": "America/New_York"
								}
							]
						},
						"description": "List currently extant webhooks.\n\n"
					},
					"response": []
				},
				{
					"name": "Update a Webhook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Renamed webhook\",\n  \"events\": [\n    \"generation_rejection\",\n    \"delay\"\n  ],\n  \"auth_type\": \"none\",\n  \"custom_headers\": {\n    \"x-api-key\": \"abcd\"\n  }\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks/26eb60d0-2d00-11e8-9280-6104068f60fa",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"26eb60d0-2d00-11e8-9280-6104068f60fa"
							]
						},
						"description": "Update a webhook's properties by specifying its id in the URI path and use a **webhooks object** as\nthe PUT request body.\n\nNote that batches currently queued for delivery to this webhook will not be affected by these\nmodifications.  For example, if you change the webhook's target URL, batches already queued for delivery will still be POSTed to the previous URL.\n\nAs described in \"Webhooks Object Properties\", a change to the _target_ value entails a test POST request to the URL given. If this request does not receive an HTTP 200 response, your request to the Webhooks API will fail with HTTP 400, and the webhook will not be modified.\n\n"
					},
					"response": []
				},
				{
					"name": "Delete a Webhook",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks/26eb60d0-2d00-11e8-9280-6104068f60fa",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"26eb60d0-2d00-11e8-9280-6104068f60fa"
							]
						},
						"description": "Delete a webhook from the system by specifying its id in the URI path.  The system will stop pushing data to the target URL after the batches currently queued to be\ndelivered are drained.\n\n"
					},
					"response": []
				},
				{
					"name": "Validate a Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"msys\": {}\n    }\n}\n\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks/26eb60d0-2d00-11e8-9280-6104068f60fa/validate",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"26eb60d0-2d00-11e8-9280-6104068f60fa",
								"validate"
							]
						},
						"description": "The validation sends an example message event batch from the Webhooks API to the\ntarget URL, validates that the target responds with HTTP 200,\nand returns detailed information on the response received from the target.\n\n#### Message Properties\n\n| Property   | Type   | Description | Required | Notes |\n|------------|--------|-------------|----------|-------|\n| message    | object | Example batch to send | yes | example: `{\"msys\": {}}`  |\n\n"
					},
					"response": []
				},
				{
					"name": "Retrieve Status Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{API_KEY}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/v1/webhooks/d006deb0-2b62-11e7-8835-8b943b52aa83/batch-status?limit=1000",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"webhooks",
								"d006deb0-2b62-11e7-8835-8b943b52aa83",
								"batch-status"
							],
							"query": [
								{
									"key": "limit",
									"value": "1000"
								}
							]
						},
						"description": "Retrieve status information regarding batches that have been generated\nfor the given webhook by specifying its id in the URI path. Status information includes the successes of batches\nthat previously failed to reach the webhook's target URL and batches that\nare currently in a failed state.\n\n"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ca897972-fe2d-4794-aeef-0976afa8972a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "cb74e447-0a37-45c5-bfd5-b71ea0307e61",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0e142ef3-fb02-410e-a51d-a2eeec386f89",
			"key": "BASE_URL",
			"value": "https://api.sparkpost.com",
			"type": "string",
			"description": ""
		}
	]
}